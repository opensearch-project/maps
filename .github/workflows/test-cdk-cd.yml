name: Test tiles generation CDK CD and ECS task run

on: 
  pull_request_target:
      branches:
        - main
      paths:
        - 'tiles-generation/**'

jobs:
  approve:
    runs-on: ubuntu-latest
    steps:
    - name: Approve
      run: echo With security reasons, pull request need to be approved before running actions.
  
  build:
    runs-on: ubuntu-latest
    needs: [approve]
    environment:
        name: Pull Request
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
      
      - name: Use Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '16.x'
      
      - name: Install cdk-cli & cdk-lib
        run: |
          npm install -g aws-cdk 
          cd tiles-generation/cdk
          npm install aws-cdk-lib

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Test Raster Tile CDK
        run: |
          cd tiles-generation/cdk
          cdk deploy \
          TestRasterTileGeneration \
          SlackSNSTestRasterTileGeneration \
          EmailSNSTestRasterTileGeneration \
          --context BUCKET=${{secrets.TILE_S3_BUCKET}} \
          --context EMAIL=${{secrets.EMAIL}} \
          --context SLACK=${{secrets.SLACK}} \
          --require-approval never \
          --outputs-file ./cdk-outputs-raster.json

      - name: Run Test Raster Tiles ECS task
        run: |
          ClusterName=`jq -r '.TestRasterTileGeneration .ClusterName' tiles-generation/cdk/cdk-outputs-raster.json`
          CapacityProviderName=`jq -r '.TestRasterTileGeneration .CapacityProviderName' tiles-generation/cdk/cdk-outputs-raster.json`
          TaskDefinitionArn=`jq -r '.TestRasterTileGeneration .TaskDefinitionArn' tiles-generation/cdk/cdk-outputs-raster.json`
          aws ecs run-task --cluster $ClusterName --task-definition $TaskDefinitionArn --capacity-provider-strategy capacityProvider=$CapacityProviderName

      - name: Deploy Test Vector Tile CDK
        run: |
          cd tiles-generation/cdk
          cdk deploy \
          TestVectorTileGeneration \
          SlackSNSTestVectorTileGeneration \
          EmailSNSTestVectorTileGeneration \
          --context BUCKET=${{secrets.TILE_S3_BUCKET}} \
          --context EMAIL=${{secrets.EMAIL}} \
          --context SLACK=${{secrets.SLACK}} \
          --require-approval never \
          --outputs-file ./cdk-outputs-vector.json

      - name: Run Test Vector Tiles ECS task
        run: |
          ClusterName=`jq -r '.TestVectorTileGeneration .ClusterName' tiles-generation/cdk/cdk-outputs-vector.json`
          CapacityProviderName=`jq -r '.TestRasterTileGeneration .CapacityProviderName' tiles-generation/cdk/cdk-outputs-vector.json`
          TaskDefinitionArn=`jq -r '.TestRasterTileGeneration .TaskDefinitionArn' tiles-generation/cdk/cdk-outputs-vector.json`
          aws ecs run-task --cluster $ClusterName --task-definition $TaskDefinitionArn --capacity-provider-strategy capacityProvider=$CapacityProviderName